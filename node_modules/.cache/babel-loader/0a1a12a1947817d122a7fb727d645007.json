{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethraymond/Thinkful/Qualified-practice/Module-22/22.9-React-state-management-assessment/src/PostCreate.js\";\nimport React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *- Already done\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate(_ref) {\n  let {\n    createPost\n  } = _ref;\n  const [type, setType] = useState(\"Text\");\n  const handleTypeChange = event => setType(event.target.value);\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Submitted!\", type);\n    createPost(type);\n    setType(\"Text\");\n  };\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute- already done\n  // - one child `<button>` with a `type=\"submit\"` attribute- already done\n  // - one child `<select>` with a `name=\"type\"` attribute- already done\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`- already done\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    name: \"create\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"type\",\n    name: \"type\",\n    value: type,\n    onChange: handleTypeChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Content:\"), type === \"Text\" ? /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"content\",\n    name: \"content\",\n    required: true,\n    rows: 3,\n    value: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    id: \"content\",\n    name: \"content\",\n    type: \"url\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\nexport default PostCreate;","map":{"version":3,"names":["React","useState","PostCreate","createPost","type","setType","handleTypeChange","event","target","value","handleSubmit","preventDefault","console","log","content"],"sources":["/Users/elizabethraymond/Thinkful/Qualified-practice/Module-22/22.9-React-state-management-assessment/src/PostCreate.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *- Already done\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate({ createPost }) {\n  const [type, setType] = useState(\"Text\");\n  const handleTypeChange = (event) =>\n    setType(event.target.value)\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Submitted!\", type)\n    createPost(type)\n    setType(\"Text\")\n  }\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute- already done\n  // - one child `<button>` with a `type=\"submit\"` attribute- already done\n  // - one child `<select>` with a `name=\"type\"` attribute- already done\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`- already done\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <fieldset>\n        <legend>Create</legend>\n        <div>\n          <label htmlFor=\"type\">\n            Type: \n            </label>\n          <select \n            id=\"type\" \n            name=\"type\" \n            value={type}\n            onChange={handleTypeChange}\n            required={true}>\n            <option value=\"text\">Text</option>\n            <option value=\"image\">Image</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"content\">\n            Content: \n            </label>\n          {type === \"Text\" ? (\n            <textarea \n              id=\"content\" \n              name=\"content\" \n              required={true} \n              rows={3} \n              value={content}\n              \n              />\n          ) : (\n            <input \n              id=\"content\" \n              name=\"content\" \n              type=\"url\" \n              required={true} />\n          )}\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </fieldset>\n    </form>\n  );\n}\n\nexport default PostCreate;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA,SAASC,UAAU,OAAiB;EAAA,IAAhB;IAAEC;EAAW,CAAC;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAMK,gBAAgB,GAAIC,KAAK,IAC7BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE7B,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAET,IAAI,CAAC;IAC/BD,UAAU,CAACC,IAAI,CAAC;IAChBC,OAAO,CAAC,MAAM,CAAC;EACjB,CAAC;;EAED;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAM,IAAI,EAAC,QAAQ;IAAC,QAAQ,EAAEK,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,QAAM,CAAS,eACvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,OAEpB,CAAQ,eACV;IACE,EAAE,EAAC,MAAM;IACT,IAAI,EAAC,MAAM;IACX,KAAK,EAAEN,IAAK;IACZ,QAAQ,EAAEE,gBAAiB;IAC3B,QAAQ,EAAE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACf;IAAQ,KAAK,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAAI,CAAS,eAClC;IAAQ,KAAK,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,OAAK,CAAS,CAC7B,CACL,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,UAEvB,CAAQ,EACTF,IAAI,KAAK,MAAM,gBACd;IACE,EAAE,EAAC,SAAS;IACZ,IAAI,EAAC,SAAS;IACd,QAAQ,EAAE,IAAK;IACf,IAAI,EAAE,CAAE;IACR,KAAK,EAAEU,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEb,gBAEJ;IACE,EAAE,EAAC,SAAS;IACZ,IAAI,EAAC,SAAS;IACd,IAAI,EAAC,KAAK;IACV,QAAQ,EAAE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAClB,CACG,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,QAAM,CAAS,CACjC,CACG,CACN;AAEX;AAEA,eAAeZ,UAAU"},"metadata":{},"sourceType":"module"}