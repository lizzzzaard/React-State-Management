{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethraymond/Thinkful/Qualified-practice/Module-22/22.9-React-state-management-assessment/src/PostCreate.js\";\nimport React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *- Already done\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate() {\n  const [type, setType] = useState(\"Text\");\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute- already done\n  // - one child `<button>` with a `type=\"submit\"` attribute- already done\n  // - one child `<select>` with a `name=\"type\"` attribute- already done\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`- already done\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    name: \"create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"type\",\n    name: \"type\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Content: \"), type === \"Text\" ? /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"content\",\n    name: \"content\",\n    required: true,\n    rows: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    id: \"content\",\n    name: \"content\",\n    type: \"url\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\nexport default PostCreate;","map":{"version":3,"names":["React","useState","PostCreate","type","setType"],"sources":["/Users/elizabethraymond/Thinkful/Qualified-practice/Module-22/22.9-React-state-management-assessment/src/PostCreate.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *- Already done\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate() {\n  const [type, setType] = useState(\"Text\");\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute- already done\n  // - one child `<button>` with a `type=\"submit\"` attribute- already done\n  // - one child `<select>` with a `name=\"type\"` attribute- already done\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`- already done\n\n  return (\n    <form name=\"create\">\n      <fieldset>\n        <legend>Create</legend>\n        <div>\n          <label htmlFor=\"type\">\n            Type: \n            </label>\n          <select \n            id=\"type\" \n            name=\"type\" \n            required={true}>\n            <option value=\"text\">Text</option>\n            <option value=\"image\">Image</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"content\">\n            Content: </label>\n          {type === \"Text\" ? (\n            <textarea id=\"content\" name=\"content\" required={true} rows={3} />\n          ) : (\n            <input id=\"content\" name=\"content\" type=\"url\" required={true} />\n          )}\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </fieldset>\n    </form>\n  );\n}\n\nexport default PostCreate;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA,SAASC,UAAU,GAAG;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,MAAM,CAAC;;EAExC;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAM,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,QAAM,CAAS,eACvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,OAEpB,CAAQ,eACV;IACE,EAAE,EAAC,MAAM;IACT,IAAI,EAAC,MAAM;IACX,QAAQ,EAAE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACf;IAAQ,KAAK,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAAI,CAAS,eAClC;IAAQ,KAAK,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,OAAK,CAAS,CAC7B,CACL,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,WACd,CAAQ,EAClBE,IAAI,KAAK,MAAM,gBACd;IAAU,EAAE,EAAC,SAAS;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAE,IAAK;IAAC,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,gBAEjE;IAAO,EAAE,EAAC,SAAS;IAAC,IAAI,EAAC,SAAS;IAAC,IAAI,EAAC,KAAK;IAAC,QAAQ,EAAE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC9D,CACG,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,QAAM,CAAS,CACjC,CACG,CACN;AAEX;AAEA,eAAeD,UAAU"},"metadata":{},"sourceType":"module"}