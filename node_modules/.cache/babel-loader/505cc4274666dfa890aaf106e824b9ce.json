{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethraymond/Thinkful/Qualified-practice/Module-22/22.9-React-state-management-assessment/src/PostCreate.js\";\nimport React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *- Already done\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate(_ref) {\n  let {\n    savePost\n  } = _ref;\n  const [type, setType] = useState(\"Text\");\n  const [content, setContent] = useState(\"\");\n  const handleTypeChange = event => setType(event.target.value);\n  const handleContentChange = event => setContent(event.target.value);\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Submitted!\", type, content);\n    setType(\"Text\");\n    setContent(\"\");\n    savePost({\n      type,\n      content\n    });\n  };\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute- already done\n  // - one child `<button>` with a `type=\"submit\"` attribute- already done\n  // - one child `<select>` with a `name=\"type\"` attribute- already done\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`- already done\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    name: \"create\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"type\",\n    name: \"type\",\n    value: type,\n    onChange: handleTypeChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Content:\"), type === \"Text\" ? /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"content\",\n    name: \"content\",\n    required: true,\n    rows: 3,\n    value: content,\n    onChange: handleContentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    id: \"content\",\n    name: \"content\",\n    type: \"url\",\n    required: true,\n    value: content,\n    onChange: handleContentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\nexport default PostCreate;","map":{"version":3,"names":["React","useState","PostCreate","savePost","type","setType","content","setContent","handleTypeChange","event","target","value","handleContentChange","handleSubmit","preventDefault","console","log"],"sources":["/Users/elizabethraymond/Thinkful/Qualified-practice/Module-22/22.9-React-state-management-assessment/src/PostCreate.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n/**\n * Displays the form to create a new post, which can be either an image or a text post.\n *- Already done\n * When the form is submitted, a new post is created and the form contents cleared.\n */\nfunction PostCreate({ savePost }) {\n  const [type, setType] = useState(\"Text\");\n  const [content, setContent] = useState(\"\")\n  const handleTypeChange = (event) =>\n    setType(event.target.value)\n  \n  const handleContentChange = (event) =>\n    setContent(event.target.value)\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Submitted!\", type, content)\n    setType(\"Text\")\n    setContent(\"\")\n    savePost({type, content})\n  }\n\n  // TODO: When the form is submitted, a new post should be created, and the form contents cleared.\n\n  // For the tests to pass, the form below must have:\n  // - a `name=\"create\"` attribute- already done\n  // - one child `<button>` with a `type=\"submit\"` attribute- already done\n  // - one child `<select>` with a `name=\"type\"` attribute- already done\n  // - one child `<textarea>` or `<input>` (not both at the same time) with a `name=\"content\"`- already done\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <fieldset>\n        <legend>Create</legend>\n        <div>\n          <label htmlFor=\"type\">Type:</label>\n          <select \n            id=\"type\" \n            name=\"type\" \n            value={type}\n            onChange={handleTypeChange}\n            required={true}>\n            <option >Text</option>\n            <option >Image</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"content\">\n            Content: \n            </label>\n          {type === \"Text\" ? (\n            <textarea \n              id=\"content\" \n              name=\"content\" \n              required={true} \n              rows={3} \n              value={content}\n              onChange={handleContentChange}\n              />\n          ) : (\n            <input \n              id=\"content\" \n              name=\"content\" \n              type=\"url\" \n              required={true} \n              value={content}\n              onChange={handleContentChange}\n              />\n          )}\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </fieldset>\n    </form>\n  );\n}\n\nexport default PostCreate;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA,SAASC,UAAU,OAAe;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMO,gBAAgB,GAAIC,KAAK,IAC7BJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE7B,MAAMC,mBAAmB,GAAIH,KAAK,IAChCF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAEhC,MAAME,YAAY,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEZ,IAAI,EAAEE,OAAO,CAAC;IACxCD,OAAO,CAAC,MAAM,CAAC;IACfE,UAAU,CAAC,EAAE,CAAC;IACdJ,QAAQ,CAAC;MAACC,IAAI;MAAEE;IAAO,CAAC,CAAC;EAC3B,CAAC;;EAED;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAM,IAAI,EAAC,QAAQ;IAAC,QAAQ,EAAEO,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,QAAM,CAAS,eACvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,OAAK,CAAQ,eACnC;IACE,EAAE,EAAC,MAAM;IACT,IAAI,EAAC,MAAM;IACX,KAAK,EAAET,IAAK;IACZ,QAAQ,EAAEI,gBAAiB;IAC3B,QAAQ,EAAE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAS,MAAI,CAAS,eACtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAS,OAAK,CAAS,CAChB,CACL,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,OAAO,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,UAEvB,CAAQ,EACTJ,IAAI,KAAK,MAAM,gBACd;IACE,EAAE,EAAC,SAAS;IACZ,IAAI,EAAC,SAAS;IACd,QAAQ,EAAE,IAAK;IACf,IAAI,EAAE,CAAE;IACR,KAAK,EAAEE,OAAQ;IACf,QAAQ,EAAEM,mBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC5B,gBAEJ;IACE,EAAE,EAAC,SAAS;IACZ,IAAI,EAAC,SAAS;IACd,IAAI,EAAC,KAAK;IACV,QAAQ,EAAE,IAAK;IACf,KAAK,EAAEN,OAAQ;IACf,QAAQ,EAAEM,mBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEjC,CACG,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,QAAM,CAAS,CACjC,CACG,CACN;AAEX;AAEA,eAAeV,UAAU"},"metadata":{},"sourceType":"module"}